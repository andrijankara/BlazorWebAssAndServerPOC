@page "/counter"
@using System.Text.Json
@rendermode @(new InteractiveWebAssemblyRenderMode(prerender: false))
@using Newtonsoft.Json
@using SharedLibrary.Models
@using Syncfusion.Blazor.Grids
@using Syncfusion.Blazor.Navigations
@using Syncfusion.Blazor.Popups
@using Syncfusion.Blazor.Inputs
@using Syncfusion.Blazor.Notifications
@inject HttpClient httpClient

<PageTitle>Counter</PageTitle>

<h1>Counter</h1>

<SfGrid ID="Grid" @ref="PersonGrid" AllowGrouping="true"  AllowPaging="true" ShowColumnChooser="true" AllowFiltering="true" AllowSorting="true" DataSource="@list"  Toolbar="@toolbar">
    <GridFilterSettings Type="Syncfusion.Blazor.Grids.FilterType.Excel"></GridFilterSettings>
    <GridColumns>
        <GridColumn HeaderText="Name" Field="@nameof(Person.Name)"></GridColumn>
        <GridColumn HeaderText="Surname" Field="@nameof(Person.Surname)"></GridColumn>
    </GridColumns>
</SfGrid>


@code {
    private SfGrid<Person> PersonGrid;

    public List<Person> list { get; set; } = new();

    private List<object> toolbar = new List<object>
    {
        "ExcelExport",
        "Search",
        "ColumnChooser"
    };

    protected override async Task OnInitializedAsync()
    {
        HttpResponseMessage response = await httpClient.GetAsync("api/Person");

        // Check if request was successful
        if (response.IsSuccessStatusCode)
        {
            // Read response content as JSON
            string responseBody = await response.Content.ReadAsStringAsync();

            var dataList = JsonConvert.DeserializeObject<List<Person>>(responseBody);

            // Deserialize JSON into MyData object
            list = dataList;

        }
         base.OnInitializedAsync();
    }
}
